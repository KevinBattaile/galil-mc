#!
#! This file was autogenerated by the script $(TOP)/generate-files/generate.py
#! Manual modifications might be lost
#!

global {
    M="Mtr",
    BVEL="0", BACC="0",
    NTM="YES", RTRY="0",
    PCOF="", ICOF="", DCOF="",
}

#
#  Motor controller PVs
#

# P    - PV prefix
# PORT - Asyn port name
# SCAN - Scan period for monitor records.  Use passive when only epics will change value (default)
#      - Periodic scan will slow controller update performance (poller)
# DEFAULT_LIMITTYPE = 0 Normally open, 1 Normally closed
# DEFAULT_HOMETYPE = 0 Normally open, 1 Normally closed
# PREC - precision

file "$(GALIL)/db/galil_dmc_ctrl.template"
{
pattern
{ {{- 'P'             |  hdr(35, 'l') -}} SCAN,      DEFAULT_HOMETYPE, DEFAULT_LIMITTYPE, PREC }
{ {{- controller['P'] | sfld(35, 'l') -}} "Passive", "1",              "1",               "3"  }
}

#
# Motor axis PVs
#

file "$(GALIL)/db/galil_motor-v6-10up.template" {
pattern
{
{{- 'ADDR' | hdr(7,  'l') -}}
{{- 'P'    | hdr(35, 'l') -}}
{{- 'DESC' | hdr(30, 'l') -}}
{{- 'EGU'  | hdr(9,  'l') -}}
{{- 'VELO' | hdr(12, 'r') -}}
{{- 'VMAX' | hdr(12, 'r') -}}
{{- 'ACCL' | hdr(10, 'r') -}}
{{- 'MRES' | hdr(18, 'r') -}}
{{- 'SREV' | hdr(11, 'r') -}}
{{- 'ERES' | hdr(14, 'r') -}}
{{- 'PREC' | hdr(7,  'r') -}}
{{- 'OFF'  | hdr(12, 'r') -}}
{{- 'DHLM' | hdr(12, 'r') -}}
{{- 'DLLM' | hdr(12, 'r') -}}
{{- 'BDST' | hdr(12, 'r') -}}
{{- 'UEIP' | hdr(7,  'r', True) -}}
}
{%- for a in axes.values() | list + slits %}
{
{{- a['ADDR'] | sfld(7,  'r') -}}
{{- a['P']    | sfld(35, 'l') -}}
{{- a['DESC'] | sfld(30, 'l') -}}
{{- a['EGU']  | sfld(9,  'l') -}}
{{- a['VELO'] | sfld(12, 'r') -}}
{{- a['VMAX'] | sfld(12, 'r') -}}
{{- a['ACCL'] | sfld(10, 'r') -}}
{{- a['MRES'] | efld(7, 18, 'r') -}}
{{- a['SREV'] | sfld(11, 'r') -}}
{{- a['ERES'] | efld(3, 14, 'r') -}}
{{- a['PREC'] | sfld(7,  'r') -}}
{{- a['OFF']  | sfld(12, 'r') -}}
{{- a['DHLM'] | ffld(3, 12, 'r') -}}
{{- a['DLLM'] | ffld(3, 12, 'r') -}}
{{- a['BDST'] | ffld(3, 12, 'r') -}}
{{- a['UEIP'] | sfld(7,  'r', True) -}}
}
{%- endfor %}
}

#
# Motor axis PVs overrides
#

# P - Motion device
# M - Motor name

file "galil_motor_override.template" {
pattern
{
{{- 'P'      | hdr(35, 'l') -}}
{{- 'DIR'    | hdr(7,  'l') -}}
{{- 'RDBD'   | hdr(11, 'r', True) -}}
}
{%- for a in axes.values() | list + slits %}
{
{{- a['P']   | sfld(35, 'l') -}}
{{- a['DIR'] | sfld(7,  'l') -}}
{{- 99999    | ffld(0, 11, 'r', True) -}}
}
{%- endfor %}
}

#
# Motor axis extra PVs
#

# P - Motion device
# M - Motor name
# PORT - Asyn port of controller
# ADDR - Axis number 0-7
# PREC - Precision of analog records
# SCAN - Scan period for monitor records.  Use passive when only epics will change value (default)
#      - Periodic scan will slow controller update performance (poller)
# MTRTYPE - motor type =
#           0 - Servo
#           1 - Reverse servo
#           2 - High active stepper
#           3 - Low active stepper
#           4 - Reverse high active stepper
#           5 - Reverse low active stepper
# MTRON - motor off 0, motor on 1

file "$(GALIL)/db/galil_motor_extras.template" {
pattern
{
{{- 'ADDR'    | hdr(7,  'l') -}}
{{- 'P'       | hdr(35, 'l') -}}
{{- 'PREC'    | hdr(7,  'r') -}}
{{- 'SCAN'    | hdr(12, 'l') -}}
{{- 'MTRTYPE' | hdr(10, 'l') -}}
{{- 'MTRON'   | hdr(8,  'l') -}}
{{- 'EGU'     | hdr(9,  'l', True) -}}
}
{%- for a in axes.values() %}
{
{{- a['ADDR']    | sfld(7,  'r') -}}
{{- a['P']       | sfld(35, 'l') -}}
{{- a['PREC']    | sfld(7,  'r') -}}
{{- "Passive"    | sfld(12, 'l') -}}
{{- a['MTRTYPE'] | ffld(0, 10, 'l') -}}
{{- a['MTRON']   | sfld(8,  'l') -}}
{{- a['EGU']     | sfld(9,  'l', True) -}}
}
{%- endfor %}
}

#
# Motor axis extra PVs overrides
#

# MC - Motor controller name
# P  - Motion device
# M  - Motor name
# HOMEALLOWED - whether homing is allowed for this motor, and to which direction =
#               (hardware direction, not coord system direction)
#           0 - None
#           1 - Reverse
#           2 - Forward
#           3 - Both
# HOMEDIR - which field $(P)$(M)_HOME_CMD will write to =
#           F - HOMF
#           R - HOMR

file "galil_motor_extras_override.template" {
pattern
{
{{- 'MC'             | hdr(35, 'l') -}}
{{- 'P'              | hdr(35, 'l') -}}
{{- 'AUTOONOFF'      | hdr(15, 'l') -}}
{{- 'HOMEALLOWED'    | hdr(15, 'l') -}}
{{- 'HOMEDIR'        | hdr(10, 'l', True) -}}
}
{%- for a in axes.values() %}
{
{{- controller['P']  | sfld(35, 'l') -}}
{{- a['P']           | sfld(35, 'l') -}}
{{- a['AUTOONOFF']   | sfld(15, 'l') -}}
{{- a['HOMEALLOWED'] | sfld(15, 'l') -}}
{{- a['HOMEDIR']     | sfld(10, 'l', True) -}}
}
{%- endfor %}
}

{% if slits %}
# Forward kinematic transform equations for CS motors
#
# 8 forward equations per controller.
# 1 forward equation per CS motor I-P (8-15) = 8 in total
#
# Eg. I=(A+B)/2 - Forward equations for CS motor I (8)
#
# P    - PV prefix
# M    - CSMotor name
# PORT - Asyn port name
# ADDR - CS Motor I-P (8-15)

file "$(GALIL)/db/galil_forward_transform.template" {
pattern
{
{{- 'P'    | hdr(35, 'l')        -}}
{{- 'ADDR' | hdr(10, 'l', True)  -}}
}
{%- for s in slits %}
{
{{- s['P']    | sfld(35, 'l')       -}}
{{- s['ADDR'] | sfld(10, 'l', True) -}}
}
{%- endfor %}
}

# Reverse kinematic transform equations for CS motors
#
# 8 reverse equations per CS Motor that represent real motors A-H
# 64 reverse equations per controller in total as there are 8 CS motors I-P (8-15)
#
# Eg. A=I-J/2 - Reverse equation A for CS motor I (8)
#
# P    - PV prefix
# M    - CSMotor name
# PORT - Asyn port name
# ADDR - CS Motor I-P (8-15)

file "$(GALIL)/db/galil_reverse_transforms.template" {
pattern
{
{{- 'P'    | hdr(35, 'l')        -}}
{{- 'ADDR' | hdr(10, 'l', True)  -}}
}
{%- for s in slits %}
{
{{- s['P']    | sfld(35, 'l')       -}}
{{- s['ADDR'] | sfld(10, 'l', True) -}}
}
{%- endfor %}
}

file "galil_cs_fwd_override.template" {
pattern
{
{{- 'P'            | hdr(35, 'l')        -}}
{{- 'ADDR'         | hdr(10, 'l')        -}}
{{- 'TRANSFORM'    | hdr(20, 'l', True)  -}}
}
{%- for s in slits %}
{
{{- s['P']         | sfld(35, 'l')       -}}
{{- s['ADDR']      | sfld(10, 'l')       -}}
{{- s['FWD']       | sfld(20, 'l', True) -}}
}
{%- endfor %}
}

file "galil_cs_rev_override.template" {
pattern
{
{{- 'P'            | hdr(35, 'l')        -}}
{{- 'ADDR'         | hdr(10, 'l')        -}}
{{- 'AX'           | hdr(10, 'l')        -}}
{{- 'TRANSFORM'    | hdr(20, 'l', True)  -}}
}
{%- for s in slits %}
{%- for ax, rev in s['REV'].items() %}
{
{{- s['P']         | sfld(35, 'l')       -}}
{{- s['ADDR']      | sfld(10, 'l')       -}}
{{- ax             | sfld(10, 'l')       -}}
{{- rev            | sfld(20, 'l', True) -}}
}
{%- endfor %}
{%- endfor %}
}
{%- endif %}


{% if False %}
#
# Motor axis closed loop PVs
#

# P - Motion device
# M - Motor name
# PORT - Asyn port of controller
# ADDR - Axis number 0-7

file "$(GALIL)/db/galil_motor_closed_loop.template" {
pattern
{
{{- 'ADDR' | hdr(7,  'l') -}}
{{- 'P'    | hdr(35, 'l', True) -}}
}
{%- for a in axes.values() %}
{
{{- a['ADDR'] | sfld(7,  'r') -}}
{{- a['P']    | sfld(35, 'l', True) -}}
}
{%- endfor %}
}
{% endif %}

{% if temps %}
#
# Analog Inputs
#

# P    - PV prefix
# R    - Record Name
# PORT - Asyn port name
# ADDR - Hardware port to read
# PREC - Precision

file "$(GALIL)/db/galil_analog_in.template" {
pattern
{
{{- 'ADDR'     | hdr(7,  'l') -}}
{{- 'P'        | hdr(35, 'l') -}}
{{- 'R'        | hdr(13, 'l') -}}
{{- 'PREC'     | hdr(7,  'r') -}}
{{- 'SCAN'     | hdr(12, 'l', True) -}}
}
{%- for t in temps.values() %}
{
{{- t['ADDR']  | sfld(7,  'r') -}}
{{- t['P']     | sfld(35, 'l') -}}
{{- t['R']     | sfld(13, 'l') -}}
{{- t['PREC']  | sfld(7,  'r') -}}
{{- "I/O Intr" | sfld(12, 'l', True) -}}
}
{%- endfor %}
}

#
# Temperature based on analog input reading
#

# P    - PV prefix
# R    - Analog input record name
# EGU  - Engineering units
# PREC - Precision
# CALC - Conversion formula

file "galil_motor_temperature.template" {
pattern
{
{{- 'P'       | hdr(35, 'l') -}}
{{- 'R'       | hdr(13, 'l') -}}
{{- 'EGU'     | hdr(7,  'r') -}}
{{- 'PREC'    | hdr(7,  'r') -}}
{{- 'CALC'    | hdr(20, 'l', True) -}}
}
{%- for t in temps.values() %}
{
{{- t['P']    | sfld(35, 'l') -}}
{{- t['R']    | sfld(13, 'l') -}}
{{- t['EGU']  | sfld(7,  'r') -}}
{{- t['PREC'] | sfld(7,  'r') -}}
{{- t['CALC'] | sfld(20, 'l', True) -}}
}
{%- endfor %}
}
{% endif %}


{% if dig_outs %}
#
# Digital Outputs
#

# P    - PV prefix
# R    - Record Name
# PORT - Asyn port name
# WORD - Hardware word to read
# MASK - Mask for this bit

file "$(GALIL)/db/galil_digital_out_bit.template" {
pattern
{
{{- 'P'        | hdr(35, 'l') -}}
{{- 'R'        | hdr(13, 'l') -}}
{{- 'WORD'     | hdr(7,  'r') -}}
{{- 'MASK'     | hdr(13, 'l') -}}
{{- 'ZNAM'     | hdr(13, 'l') -}}
{{- 'ONAM'     | hdr(13, 'l') -}}
{{- 'ZSV'      | hdr(13, 'l') -}}
{{- 'OSV'      | hdr(13, 'l', True) -}}
}
{%- for t in dig_outs.values() %}
{
{{- controller['P'] | sfld(35, 'l') -}}
{{- t['R']          | sfld(13, 'l') -}}
{{- t['WORD']       | sfld(7,  'r') -}}
{{- t['MASK']       | sfld(13, 'l') -}}
{{- t['ZNAM']       | sfld(13, 'l') -}}
{{- t['ONAM']       | sfld(13, 'l') -}}
{{- "NO_ALARM"      | sfld(13, 'l') -}}
{{- "NO_ALARM"      | sfld(13, 'l', True) -}}
}
{%- endfor %}
}
{% endif %}

